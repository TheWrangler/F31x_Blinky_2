C51 COMPILER V9.00   ADC                                                                   01/27/2020 12:15:47 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\src\adc.OBJ
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.exe F:\simplicity_studo_workspace\F31x_Blinky\src\adc.c OMF2 SMALL DEBUG OBJECT
                    -EXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SIZE) INTVECTOR(0X0000) INTPROMOTE INCDIR(D:/SiliconLabs/Simp
                    -licityStudio/v4/developer/sdks/8051/v4.1.7//Device/shared/si8051Base;D:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8
                    -051/v4.1.7//Device/C8051F310/inc) PRINT(.\src\adc.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\adc.OBJ)

line level    source

   1          /*
   2           * adc.c
   3           *
   4           *  Created on: 2020Äê1ÔÂ22ÈÕ
   5           *      Author: wrangler
   6           */
   7          #include <SI_C8051F310_Register_Enums.h>
   8          #include "adc.h"
   9          
  10          void ADC_Init()
  11          {
  12   1              //positive input p3.2
  13   1          AMX0P     = 0x12;
  14   1          //negitive input gnd
  15   1          AMX0N     = 0x1F;
  16   1          //SAR clock 2.5MHz
  17   1          ADC0CF    = 0x48;
  18   1          //VDD as reference,enable internal temperature sensor
  19   1          REF0CN = 0x0f;
  20   1          //start convert when write 1 to AD0BUSY,enable ADC0
  21   1          ADC0CN    = 0x80;
  22   1      }
  23          
  24          
  25          char ADC_Get(unsigned int *pVar)
  26          {
  27   1              unsigned int adc_var;
  28   1      
  29   1              if((ADC0CN & 0x20) == 0x20/*ADC_ConvertFinish == 1*/)
  30   1              {
  31   2                      adc_var = ADC0H;
  32   2                      adc_var = (adc_var << 8);
  33   2                      adc_var += ADC0L;
  34   2      
  35   2                      *pVar = adc_var;
  36   2                      //ADC_ConvertFinish = 0;
  37   2                      return 1;
  38   2              }
  39   1              else return 0;
  40   1      }
  41          
  42          void ADC_Start(char target)
  43          {
  44   1              if(target == 0)
  45   1                      AMX0P = 0x1e;
  46   1              else AMX0P = 0x12;
  47   1      
  48   1              ADC0CN |= 0x10;
  49   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     60    ----
C51 COMPILER V9.00   ADC                                                                   01/27/2020 12:15:47 PAGE 2   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
